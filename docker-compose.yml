services:
  zookeeper:
    image: zookeeper
    restart: always
    ports:
      - "2181:2181"
    environment:
      ZOO_JUTE_MAXBUFFER: 41943040

  broker:
    image: apache/kafka:latest
    container_name: broker
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      # Use 'broker' as the hostname for listeners instead of 'localhost'
      KAFKA_LISTENERS: PLAINTEXT://broker:9092,CONTROLLER://broker:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper

  kafka-cli:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - broker
    entrypoint: /bin/sh
    networks:
      - default
    stdin_open: true
    tty: true

  postgres:
    image: postgres
    container_name: postgres-db
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: coursesmanagerdatabase
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  courses-manager-app:
    image: courses-manager-img
    build:
      dockerfile: ./Dockerfile.backend
    ports:
      - "8080:8080"
      - "5005:5005"
    volumes:
      - ./:/app
      - maven_repository:/root/.m2
    links:
      - broker:broker
      - postgres:postgres
    depends_on:
      - postgres
      - broker

volumes:
  postgres_data: {}
  maven_repository: {}
